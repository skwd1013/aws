# name: Docker Image CI

# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

# jobs:

#   build:

#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v3
#     - name: Build the Docker image
#       run: docker build . --tag tricount:$(date +%s)
name: Spring Boot CI/CD Pipeline

on:
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew

    - name: Build with Gradle
      run: ./gradlew build

    - name: Build Docker image
      run: docker build -t tricount:${{ github.sha }} .
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Push Docker image to Amazon ECR
      run: |
        docker build -t ${{ secrets.AWS_ECR_REPOSITORY }}:${{ github.sha }} .
        #docker tag ${{ secrets.AWS_ECR_REPOSITORY }}:${{ github.sha }} ${{ secrets.AWS_ECR_REPOSITORY }}:latest
        #docker push ${{ secrets.AWS_ECR_REPOSITORY }}:${{ github.sha }}
        #docker push ${{ secrets.AWS_ECR_REPOSITORY }}:latest


    - name: Upload Docker image to S3
      run: |
        docker save tricount:${{ github.sha }} | aws s3 cp - s3://your-bucket-name/path/to/tricount.tar

    - name: Deploy to AWS CodeDeploy
      run: |
        aws deploy create-deployment --application-name your-application-name \
          --deployment-group-name your-deployment-group-name \
          --revision revisionType=S3,bucket=your-bucket-name,key=path/to/tricount.tar,bundleType=tar \
          --deployment-config-name CodeDeployDefault.OneAtATime
